<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<property resource="application.properties"/>
	
	<appender name="FILE-ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
        	
        	<file>${logging.file.path}${logging.file.name}.log</file>
        	
        	<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
        	
        		<!-- daily rollover -->	
        		<fileNamePattern>${logging.file.name}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
        		
        		<!-- keep 2 days worth of history capped at 5MB total size -->
        		<maxHistory>2</maxHistory>
        		<totalSizeCap>10MB</totalSizeCap>
        		<maxFileSize>5MB</maxFileSize>
        	</rollingPolicy>
        	
        	<encoder 
        			class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
        			<providers>
        				<timestamp>
        					<timeZone>America/Sao_Paulo</timeZone>
        				</timestamp>
        				<version/>
        				<callerData>
        					<classFieldName>classname</classFieldName>
        					<methodFieldName>method</methodFieldName>
        					<fileFieldName>file</fileFieldName>
        					<lineFieldName>line</lineFieldName>
        				</callerData>
        				<threadName>
        					<fieldName>thread</fieldName>
        				</threadName>
        				<loggerName />
        				<logLevel />
        				<mdc />
        				<message />
        				<arguments>
        					<includeNonStructuredArguments>true</includeNonStructuredArguments>
        				</arguments>
        				<logstashMarkers />
        				<stackTrace />
        			</providers>
        	</encoder>
    </appender>
    
    <appender name="Console" 
    		class="ch.qos.logback.core.ConsoleAppender">
        	
        	<encoder 
        			class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
        			<providers>
        				<timestamp>
        					<timeZone>America/Sao_Paulo</timeZone>
        				</timestamp>
        				<version/>
        				<callerData>
        					<classFieldName>classname</classFieldName>
        					<methodFieldName>method</methodFieldName>
        					<fileFieldName>file</fileFieldName>
        					<lineFieldName>line</lineFieldName>
        				</callerData>
        				<threadName>
        					<fieldName>thread</fieldName>
        				</threadName>
        				<loggerName />
        				<logLevel />
        				<mdc />
        				<message />
        				<arguments>
        					<includeNonStructuredArguments>true</includeNonStructuredArguments>
        				</arguments>
        				<logstashMarkers />
        				<stackTrace />
        			</providers>
        	</encoder>
    </appender>
    
        <appender name="ASYNC_CONSOLE"
    	class="ch.qos.logback.classic.AsyncAppender">
    	<appender-ref ref="Console" />
    	<queueSize>1</queueSize>
    	<includeCallerData>false</includeCallerData>
    	<neverBlock>true</neverBlock>
    	<discardingThreshold>0</discardingThreshold>
    </appender>
       
    <root level="INFO">
        <appender-ref ref="ASYNC_CONSOLE"/>
        <appender-ref ref="FILE-ROLLING"/>
    </root>

	<logger
		name="com.priscila.course.filters.RequestAndResponseLoggingFilter"
		level="info" additivity="false">
		<appender-ref ref="ASYNC_CONSOLE" />
		<appender-ref ref="FILE-ROLLING"/>
	</logger>
	
	<logger 
		name="com.priscila.course.utils.RestTemplateLoggingInterceptor"
		level="info" additivity="false">
		<appender-ref ref="ASYNC_CONSOLE" />
		<appender-ref ref="FILE-ROLLING"/>
	</logger>
	   	
</configuration>